What happens when you initialize a repository? Why do you need to do it?
git metadata is created into the directory and we need to start trackin files and do an initial commint.
Because whitout initialice the repo we cannot make sense of using git.

How is the staging area different from the working directory and the repository? What value do you think it offers?

Is a temporal space, like a meta folder, which serves to decide which files and changes will  be commited. 
Its great beacause we cann hold on and think before commit changes or maybe have a file added to the stage during we work on it and then just commit the final version for thta specific change.


How can you use the staging area to make sure you have one commit per logical change?
checking git diff we can see how many changes we are next to commit. The estagin area serves as double check that we are making the right changes

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When you have features not directly related whit the productive version. During testing or feveloping new features. When have a team working on differente pieces of the same project


How do the diagrams help you visualize the branch structure?
You can see where exactly the branch was created and its relation (along time or commints) relate to other brances


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Parallel changes combines adding all the features together,because after merging the child start a new branch labeled as master, but it is the result of merge two previous branches.


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Pros atomatic merging: Don't have to review all the code in order to know where and how to merge, it saves time.
Cons automatic merging: The algorithm isn't smart enough to resolv conflicts so it demands hand review of changes and conflict solving prior to merging
